#summary KeychainPasswordKeeper documentation.

=== Intent ===

To wrap Keychain access to provide an easy way to keep passwords and validate them.

It's important that the class does not retrieve at any point the password making it more secure.

=== Files involved ===

All under:
[http://code.google.com/p/ziptk/source/browse/#svn/trunk/src/Security Security]

 * !KeychainPasswordKeeper.h
 * !KeychainPasswordKeeper.m

=== Internal behavior ===

Uses Keychain access to complete requested operations like:
{{{
- (BOOL)keepPassword:(NSString *)password;
- (BOOL)isKeepingPassword;
- (BOOL)passwordKeptIs:(NSString *)password;
- (BOOL)forgetPassword:(NSString *)password;
- (BOOL)changePasswordKept:(NSString *)password with:(NSString *)newPassword;
}}}

=== Usage sample code ===

{{{
NSString *myPassword = @"My password";

KeychainPasswordKeeper *passwordKeeper = [[KeychainPasswordKeeper alloc] init];

[passwordKeeper keepPassword:myPassword];

if ([passwordKeeper isKeepingPassword] == YES) {
    NSLog(@"The keeper is keeping a password.");
} else {
    NSLog(@"The keeper is not keeping a password.");
}

if ([passwordKeeper forgetPassword:@"Wrong password"] == YES) {
    NSLog(@"The keeper forgot a wrong password, this should not happen.");
} else {
    NSLog(@"The keeper did nothing, the password was wrong.");
}

if ([passwordKeeper changePasswordKept:myPassword with:@"My new password"] == YES) {
    NSLog(@"A new password was set on the keeper.");
} else {
    NSLog(@"The password kept did not match the on you provided, this should not happen.");
}

if ([passwordKeeper passwordKeptIs:myPassword] == YES) {
    NSLog(@"We changed the password, so this should not happen.");
} else {
    NSLog(@"Let's try the new password.");

    if ([passwordKeeper passwordKeptIs:@"My new password"] == YES) {
         NSLog(@"Finally we got the password validated.");
    } else {
         NSLog(@"The keeper is not validating us, this should not happen.");
    }
}
}}}

If services or users are needed just set the properties before calling the methods:
{{{
NSString *myPassword = @"My password";

KeychainPasswordKeeper *passwordKeeper = [[KeychainPasswordKeeper alloc] init];

passwordKeeper.optionalUserName = @"jsmith";
passwordKeeper.optionalServiceName = @"SalesModule";

[passwordKeeper keepPassword:myPassword];
...
}}}